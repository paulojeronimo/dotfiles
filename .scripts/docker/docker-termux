#!/usr/bin/env bash
#
# Base for this script: https://github.com/termux/termux-docker/blob/master/run.sh
set -eou pipefail
docker_log=$(mktemp)
default_container_name=${0##*/}

ok() { echo ok; }
fail() { echo fail!; cat $docker_log; }

f=.${0##*/}
if ! [ -f $f ]
then
  container_name=${f#\.}
else
  source "$PWD/$f"
fi

echo Container: $container_name

case "${1:-run}" in
  run|start)
    docker start $container_name &> /dev/null || {
      echo Creating container ...
      mount_source=$HOME
      mount_target=home-$USER
      [ "$container_name" = "$default_container_name" ] || {
        mount_source=$PWD
        mount_target=$container_name
      }
      docker run \
        --mount type=bind,source="$mount_source",target=/mnt/$mount_target \
        --detach \
        --name $container_name \
        --tty \
        termux/termux-docker:x86_64
    }
    echo Acccessing container ...
    docker exec --interactive --tty $container_name \
      /data/data/com.termux/files/usr/bin/login
    ;;
  stop)
    echo -n Stopping container "... "
    docker stop $container_name &> $docker_log && ok || fail
    ;;
  rm|remove)
    echo -n Removing container "... "
    docker rm $container_name &> $docker_log && ok || fail
    ;;
  *)
    cat <<'EOF'
Usage:
$0 <<run|start>|stop|<rm|remove>>
EOF
esac
